{"version":3,"sources":["logo.svg","components/Box1.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Box1","props","handleClick","p","temp","Date","state","selectDate","interval","Number","selectValue","fertility_temp","more_fertility","next_date","setDate","getDate","setState","newdate","newmonth","getMonth","newyear","getFullYear","newday","getDay","f_day","f_date","f_month","f_year","m_day","m_date","m_month","m_year","n_day","n_date","n_month","n_year","console","log","month","date","temp_str","newdatestring","submitted","arrmonth","arrdays","handleDropdownChange","bind","e","this","target","value","className","style","textAlign","color","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft","type","onChange","event","width","height","borderRadius","borderWidth","borderColor","id","marginTop","onClick","backgroundColor","border","href","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f2f598e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react';\r\nimport { Server } from \"net\";\r\nimport { strict } from 'assert';\r\nimport { stringify } from 'querystring';\r\nimport './Box1.css';\r\n \r\n\r\nclass Box1 extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            selectValue : 0 , \r\n            selectDate : \"\",\r\n            newday: \"\",\r\n            newdate : \"\",\r\n            newmonth:\"\",\r\n            newyear:\"\",\r\n            arrmonth : ['January','February','March','April','May','June','July','August','September','October','November','December'],\r\n            arrdays : ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],\r\n            newdatestring:\"\",\r\n            submitted:false,\r\n            f_day :\"\",\r\n            f_date :\"\",\r\n            f_month : \"\",\r\n            f_year:\"\",\r\n            m_day :\"\",\r\n            m_date :\"\",\r\n            m_month : \"\",\r\n            m_year:\"\",\r\n            n_day :\"\",\r\n            n_date :\"\",\r\n            n_month : \"\",\r\n            n_year:\"\",\r\n\r\n        };\r\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleDropdownChange(e) {\r\n        this.setState({ selectValue: e.target.value });\r\n      }\r\n    handleClick = (p) => {\r\n        var temp = new Date((this.state.selectDate));\r\n        var interval = Number(this.state.selectValue);\r\n        var fertility_temp = new Date((this.state.selectDate));\r\n        var more_fertility = new Date((this.state.selectDate));\r\n        var next_date = new Date((this.state.selectDate));\r\n\r\n        temp.setDate((temp.getDate()+interval)-14);\r\n        fertility_temp.setDate((fertility_temp.getDate()+interval)-17);\r\n        more_fertility.setDate((more_fertility.getDate()+interval)-12);\r\n        next_date.setDate((next_date.getDate()+interval)-13);\r\n\r\n        this.setState({newdate: temp.getDate(),newmonth:temp.getMonth(),newyear:temp.getFullYear(),newday:temp.getDay()});\r\n        this.setState({f_day:fertility_temp.getDay(),f_date : fertility_temp.getDate(),f_month:fertility_temp.getMonth(),f_year : fertility_temp.getFullYear()})\r\n        this.setState({m_day:more_fertility.getDay(),m_date : more_fertility.getDate(),m_month:more_fertility.getMonth(),m_year : more_fertility.getFullYear()})\r\n        this.setState({n_day:next_date.getDay(),n_date : next_date.getDate(),n_month:next_date.getMonth(),n_year : next_date.getFullYear()})\r\n\r\n        console.log(temp + \"hello\"+ fertility_temp +\"hello\" + more_fertility);\r\n\r\n        var month = temp.getMonth()+1;\r\n        var date = temp.getDate();\r\n        if(month<10){\r\n          month = \"0\"+ month;\r\n        }\r\n        if(date<10){\r\n          date = \"0\"+ date;\r\n        }\r\n\r\n        let temp_str =  temp.getFullYear()+\"-\"+month+\"-\"+date;\r\n        console.log(temp_str)\r\n        this.setState({newdatestring:temp_str,submitted:true});\r\n\r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className =\"mainbox\">\r\n            <div className=\"container\">\r\n                <div className=\"row\" >\r\n                    <h1 style={{textAlign:\"center\",color:\"#163948\",paddingTop:\"4%\", paddingBottom:\"1%\",paddingLeft:\"35%\"}}>Ovulation Calculator</h1>\r\n                    <p style={{paddingLeft:\"5%\",paddingRight:\"5%\",textAlign:\"center\",paddingBottom:\"4%\"}}>Information regarding when you will ovulate can help you easily track your fertility window and increase your chances of getting pregnant. Below is a simple, hassle-free tool below to help you easily track your ovulation.</p>\r\n                </div>\r\n                <div className=\"row\"> \r\n                  <div className=\"col-sm-6\">\r\n                    <p  style={{marginLeft:\"15%\" ,color:\"#163948\" ,paddingLeft:\"2%\"}}><strong>When did you get your most recent period?</strong> </p>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <p style={{marginLeft:\"15%\" ,color:\"#163948\" ,paddingLeft:\"4%\"}}><strong>What is your average menstrual cycle length?</strong></p>\r\n                  </div>\r\n                    \r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col\">\r\n                        \r\n                        <input className=\"inputDate\"  type=\"date\" onChange={(event) => this.setState({selectDate: event.target.value})}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <select style={{marginLeft:\"33%\", width : \"200px\", height:\"50px\" ,color:\"#163948\" ,borderRadius:\"25px\",paddingLeft:\"4%\",borderWidth:\"3px\",borderColor:\"#163948\"}} id =\"dropdown\" onChange={this.handleDropdownChange}>\r\n                                    <option value=\"\">Select days</option>\r\n                                    <option value=\"20\">20 days</option>\r\n                                    <option value=\"21\">21 days</option>\r\n                                    <option value=\"22\">22 days</option>\r\n                                    <option value=\"23\">23 days</option>\r\n                                    <option value=\"24\">24 days</option>\r\n                                    <option value=\"25\">25 days</option>\r\n                                    <option value=\"26\">26 days</option>\r\n                                    <option value=\"27\">27 days</option>\r\n                                    <option value=\"28\">28 days</option>\r\n                                    <option value=\"29\">29 days</option>\r\n                                    <option value=\"30\">30 days</option>\r\n                                    <option value=\"31\">31 days</option>\r\n                                    <option value=\"32\">32 days</option>\r\n                                    <option value=\"33\">33 days</option>\r\n                                    <option value=\"34\">34 days</option>\r\n                                    <option value=\"35\">35 days</option>\r\n                                    <option value=\"36\">36 days</option>\r\n                                    <option value=\"37\">37 days</option>\r\n                                    <option value=\"38\">38 days</option>\r\n                                    <option value=\"39\">39 days</option>\r\n                                    <option value=\"40\">40 days</option>\r\n                                    <option value=\"41\">41 days</option>\r\n                                    <option value=\"42\">42 days</option>\r\n                                    <option value=\"43\">43 days</option>\r\n                                    <option value=\"44\">44 days</option>\r\n                                    <option value=\"45\">45 days</option>\r\n                            </select>\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"row\">\r\n                    <button className=\"myButton\" style={{marginLeft:\"45%\",marginTop:\"2%\"}} onClick ={()=> this.handleClick()}>Submit</button> \r\n                </div>\r\n                  <div >\r\n\r\n                      {this.state.submitted?<div style={{backgroundColor:\"white\",marginTop:\"5%\",paddingBottom:\"3%\",border:\"solid\",borderRadius:\"28px\"}}>\r\n                        <div className=\"row\">\r\n                              <div className=\"col\">\r\n                                  <div className=\"row\">\r\n                                    <h5 style={{textAlign:\"left\",paddingTop:\"5%\",color:\"#54595F\",marginLeft:\"10%\"}}>Predicted ovulation date : </h5>\r\n                                    <div className=\"row\">\r\n                                    <h5 style={{textAlign:\"left\",paddingTop:\"0.5%\",color:\"black\",marginLeft:\"-220px\",marginTop:\"60px\"}}>{this.state.arrdays[this.state.newday]}, {this.state.newdate} {this.state.arrmonth[this.state.newmonth]} {this.state.newyear}</h5>\r\n                                    </div>\r\n                                    \r\n\r\n                                  </div>\r\n                                  <div className=\"row\">\r\n                                    <h5 style={{textAlign:\"left\",paddingTop:\"5%\",color:\"#54595F\",marginLeft:\"10%\"}}>Most fertile days : </h5>\r\n                                    <h5 style={{textAlign:\"left\",paddingTop:\"0.5%\",color:\"black\",marginLeft:\"10%\"}}>{this.state.arrdays[this.state.f_day]}, {this.state.f_date} {this.state.arrmonth[this.state.f_month]} {this.state.f_year} to {this.state.arrdays[this.state.newday]}, {this.state.newdate} {this.state.arrmonth[this.state.newmonth]} {this.state.newyear}</h5>\r\n                                  </div>\r\n                                  <div className=\"row\">\r\n                                    <h5 style={{textAlign:\"left\",paddingTop:\"5%\",color:\"#54595F\",marginLeft:\"10%\"}}>Potentially fertile days : </h5>\r\n                                    <h5 style={{textAlign:\"left\",paddingTop:\"0.5%\",color:\"black\",marginLeft:\"10%\"}}>{this.state.arrdays[this.state.n_day]}, {this.state.n_date} {this.state.arrmonth[this.state.n_month]} {this.state.n_year} and {this.state.arrdays[this.state.m_day]}, {this.state.m_date} {this.state.arrmonth[this.state.m_month]} {this.state.m_year}</h5>\r\n                                  </div>\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                  <p style={{marginLeft:\"35%\",marginTop:\"25%\"}}><strong>View Ovulation Date in Calendar</strong></p>\r\n                                  <input className=\"inputDate\" style={{marginLeft:\"40%\",marginTop:\"0%\"}} type=\"date\" value ={this.state.newdatestring} />\r\n                                 \r\n                              </div>\r\n \r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"row\">\r\n                                <a style={{marginLeft:\"45%\",marginTop:\"2%\"}} className=\"myButton\" href=\"http://DivyanshiSingh7.github.io/tracker4/\" >Redo</a>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                      </div>:null}\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Box1\r\n\r\n/*\r\n\r\n \r\n\r\n<div>Selected date is : {this.state.selectDate}</div>\r\n\r\n<div>Selected value is : {this.state.selectValue}</div>\r\n            \"2020-09-08\"\r\n\r\nbox-shadow: 3px 3px 0px 0px #899599;\r\nbackground:linear-gradient(to bottom, #ededed 5%, #900c3f 100%);\r\n\r\n\r\n\tbackground:linear-gradient(to bottom, #900c3f 5%, #ededed 100%);\r\n\r\n            */","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Box1 from './components/Box1';\n//import {Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Box1 />\n    //<Route exact path=\"/\" component={Box1} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}